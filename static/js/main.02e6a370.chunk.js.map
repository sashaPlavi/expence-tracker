{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomExpence.js","components/Transaction.js","components/TransactionList.js","components/Addtransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpence","amounts","transition","income","tot","expence","className","Transaction","sign","text","onClick","TransactionList","key","Addtransaction","React","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02e6a370.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Header = () => {\r\n  return <h2>expence tracker</h2>;\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          transaction => transaction.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n  transactions: []\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n  // actions\r\n  const deleteTransaction = id => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id\r\n    });\r\n  };\r\n  const addTransaction = transaction => {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n  return (\r\n    <>\r\n      <h4>Your balance</h4>\r\n      <h1> ${total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const IncomeExpence = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map(transition => transition.amount);\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((tot, item) => (tot += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expence = amounts\r\n    .filter(item => item < 0)\r\n    .reduce((tot, item) => (tot -= item), 0)\r\n    .toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">+${income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">-${expence}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount > 0 ? \"+\" : \"-\";\r\n\r\n  return (\r\n    <div>\r\n      <li className={sign === \"-\" ? \"minus\" : \"plus\"}>\r\n        {transaction.text} <span>${transaction.amount}</span>\r\n        <button\r\n          onClick={() => deleteTransaction(transaction.id)}\r\n          className=\"delete-btn\"\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { useContext } from \"react\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Addtransaction = () => {\r\n  const [text, setText] = React.useState(\"\");\r\n  const [amount, setAmount] = React.useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n  const onSub = e => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 10000),\r\n      text,\r\n      amount: +amount\r\n    };\r\n    addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSub}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={e => {\r\n              setText(e.target.value);\r\n            }}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={e => {\r\n              setAmount(e.target.value);\r\n            }}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Header } from \"./components/Header.js\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpence } from \"./components/IncomExpence\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { Addtransaction } from \"./components/Addtransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpence />\n        <TransactionList />\n        <Addtransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}